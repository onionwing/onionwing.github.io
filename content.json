{"meta":{"title":"OnionWing之家","subtitle":"","description":"","author":"Oinon Wing","url":"http://yoursite.com","root":"/"},"pages":[{"title":"categories","date":"2019-11-10T08:30:33.000Z","updated":"2019-11-10T14:36:49.312Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tag","date":"2019-11-10T14:36:16.000Z","updated":"2019-11-10T14:41:57.210Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"关于标签云，分类，归档返回的问题（待解决）","slug":"关于标签云，分类，归档返回的问题（待解决）","date":"2020-11-11T02:38:45.000Z","updated":"2019-11-12T11:11:14.435Z","comments":true,"path":"2020/11/11/关于标签云，分类，归档返回的问题（待解决）/","link":"","permalink":"http://yoursite.com/2020/11/11/%E5%85%B3%E4%BA%8E%E6%A0%87%E7%AD%BE%E4%BA%91%EF%BC%8C%E5%88%86%E7%B1%BB%EF%BC%8C%E5%BD%92%E6%A1%A3%E8%BF%94%E5%9B%9E%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%88%E5%BE%85%E8%A7%A3%E5%86%B3%EF%BC%89/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Python3  turtle","slug":"Python3  turtle","date":"2019-11-12T11:09:45.000Z","updated":"2019-11-12T12:54:33.975Z","comments":true,"path":"2019/11/12/Python3  turtle/","link":"","permalink":"http://yoursite.com/2019/11/12/Python3%20%20turtle/","excerpt":"","text":"#Python3 turtle ##画笔运动命令: 123456789turtle.forward(distance) //向当前画笔方向移动distance像素长turtle.backward(distance) // 向当前画笔相反方向移动distance像素长度turtle.right(degree) //顺时针移动degree°turtle.left(degree) //逆时针移动degree°turtle.pendown() //移动时绘制图形,缺省时也为绘制turtle.goto(x,y) //将画笔移动到坐标为x,y的位置turtle.penup() //移动时不绘制图形,提起笔，用于另起一个地方绘制时用turtle.speed(speed)// 画笔绘制的速度范围[0,10]整数turtle.circle() //画圆,半径为正(负),表示圆心在画笔的左边(右边)画圆 ##画笔控制命令: 123456789turtle.pensize(width)// 绘制图形时的宽度turtle.pencolor()// 画笔颜色turtle.fillcolor(colorstring) // 绘制图形的填充颜色turtle.color(color1, color2) // 同时设置pencolor=color1, fillcolor=color2turtle.filling() // 返回当前是否在填充状态turtle.begin_fill() // 准备开始填充图形turtle.end_fill() // 填充完成；turtle.hideturtle() // 隐藏箭头显示；turtle.showturtle() // 与hideturtle()函数对应 ##全局控制命令: 123456turtle.clear() // 清空turtle窗口，但是turtle的位置和状态不会改变turtle.reset() // 清空窗口，重置turtle状态为起始状态turtle.undo() // 撤销上一个turtle动作turtle.isvisible() // 返回当前turtle是否可见stamp() // 复制当前图形turtle.write(s[,font=(&quot;font-name&quot;,font_size,&quot;font_type&quot;)]) // 写文本，s为文本内容，font是字体的参数，里面分别为字体名称，大小和类型；font为可选项, font的参数也是可选项","categories":[{"name":"2019年11月","slug":"2019年11月","permalink":"http://yoursite.com/categories/2019%E5%B9%B411%E6%9C%88/"}],"tags":[{"name":"学习","slug":"学习","permalink":"http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"python3","slug":"python3","permalink":"http://yoursite.com/tags/python3/"}]},{"title":"JavaScript学习3","slug":"JavaScript3","date":"2019-11-10T12:38:45.000Z","updated":"2019-11-12T11:08:31.077Z","comments":true,"path":"2019/11/10/JavaScript3/","link":"","permalink":"http://yoursite.com/2019/11/10/JavaScript3/","excerpt":"","text":"js3##Math+函数 js的Math对象123456789Math方法Math.round() //四舍五入取整Math.floor() //向下取整 floor:地板Math.ceil() //向上取整 ceil:天花板Math.random() //随机数 0-10 js的函数定义函数123456789f()function f()&#123; console.log(&quot;ok&quot;)&#125;f() //打印两个ok先定义再调用 匿名函数 无法执行需要使用到函数表达式 函数表达式：（） + — ！ ~+function(){ ​ }（） //自执行 （function(){ ​ }）（） 或 （function(){ ​ }（）） function sum(x,y,z){ ​ console.log(“x:”+x+”y:”+y”z:”+z) ​ } sum(1,2,3) x:1y:2z:3 sum(1,2) x:1y:2 undefind sum(1,2,3,4) x:1y:2z:3 //修正：适用多种参数 function（）{ ​ console.log(arguments) ​ } //函数返回值 return //声明提前 //函数作用域 时间对象###获取时间对象 123456789101112131415161718192021var time=new Date()console.log(time) //当前时间console.log(time.getTime()) //时间戳：每个地区时间都不一样//年月日 时分秒 var year=time.getFullYear()var mon=time.getMonth()+1 //外国人从0月开始var date=time.getDate()+1var hour=time.getHours()var min=time.getMinutes()var sec=time.getSeconds()console.log(year+&quot;年&quot;+mon+&quot;月&quot;)//拼接 定时器延时器1234567891011setTimeout(function()&#123; console.log(&quot;onionwing&quot;)&#125;,1000) //1s后打印onionwingfunction f()&#123; console.log(&quot;onionwing&quot;)&#125;setTimeout(f,1000) //推荐这个 定时器12345var st =setInterval(f,1000)clearInterval() //清除setInterval(f,1000)","categories":[{"name":"2019年11月","slug":"2019年11月","permalink":"http://yoursite.com/categories/2019%E5%B9%B411%E6%9C%88/"}],"tags":[{"name":"学习","slug":"学习","permalink":"http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"}]},{"title":"JavaScript学习2","slug":"JavaScript2","date":"2019-11-10T11:38:45.000Z","updated":"2019-11-12T11:08:46.270Z","comments":true,"path":"2019/11/10/JavaScript2/","link":"","permalink":"http://yoursite.com/2019/11/10/JavaScript2/","excerpt":"","text":"JavaScript2算术运算符 数与数的计算 + - * / ++ – %数和字符的运算+是拼接并转为数字 -为用数数计算 12345var num=5 console.log(num+undefined) //NANconsole.log(num+null) //5 赋值运算符 += -= *= /=12345var num=5console.log(num+=undefined) //NaNconsole.log(num+=null) //NaN 逻辑运算符 &amp;&amp; 与 ||或 ！非 ？？？？？123456789101112131415161718192021222324252627console.log(0&amp;&amp;0&amp;&amp;5) //0console.log(10&amp;&amp;5&amp;&amp;undefined) //undefinedconsole.log(10||5||10) //是真就返回第一个数字//短路计算console.log(5&amp;&amp;false||null) //null 5&amp;&amp;false返回0 //取反 ！ *只要不是数字就是true*console.log(!undefined) //trueconsole.log(!null) //trueconsole.log(!10) //false//比较运算符 &gt; &gt;= &lt; &lt;= == ===var num=5var str=&quot;5&quot;console.log(num==str) //trueconsole.log(num===str) //false 严格相等 控制流程 if var name=&quot;onionwing&quot; if(name==&quot;onionwing&quot;){ console.log(naem+&quot;我&quot;) } else{ console.log(naem+&quot;你&quot;) } 三目运算符 判断条件?console.log(name+”我”);console.log(naem+”你”) switch 123456789switch()&#123; case&quot;onionwing&quot;:console.log(naem+&quot;我&quot;) case&quot;onionwing&quot;:console.log(naem+&quot;你&quot;) default:console.log(&quot;你...&quot;)&#125; for循环 与C语言相同 for是一个快级作用域，所以当你把这四个li绑定事件通过for循环处理 1234567891011121314151617181920212223242526272829303132333435for(var i=0:i&lt;obj.length;i++)&#123;​ obj[i].onclick=function()&#123;​ console.log(i)​ &#125;&#125; //错误的 都为obj.length改for(let i=0:i&lt;obj.length;i++)&#123;​ obj[i].onclick=function()&#123;​ console.log(i)​ &#125;&#125;for(var i=0:i&lt;obj.length;i++)&#123;​ obj[i].num=i​ obj[i].onclick=function()&#123;​ console.log(this.num)​ &#125;&#125; break//只退出当次循环 continue while 与C语言相同 do while 与C语言相同 先做在循环 字符串1234567891011121314151617181920212223var str=&quot;hello world&quot;console.log(str.length) //字符串长度console.log(str[]) //下标console.log(str.indexof(&quot;e&quot;))console.log(str.indexof(&quot;e&quot;,4))console.log(str.indexof(&quot;x&quot;)) //-1console.log(str.polit(&quot;0,4&quot;)) //切片console.log(str.substring(0,4)) //包前不报后 切片console.log(str.substring(-2,4)) //负数当成0console.log(str.substring(4，1)) //自动交换console.log(str.slice(0,4)) //切片console.log(str.slice(4,2)) //不能自动切换 并不会把负数当成0 数组方法###数组的两种创建方法 123var a=[1,2,3] var a =new Array() 可读可写1234567891011121314151617181920212223242526272829arr=[1,2,3,4]console.log(arr[0])arr[0]=5 //改//pusharr.push(&quot;a&quot;,&quot;b&quot;) 在后面添加 可加一个或多个//unshiftarr.unshift(&quot;a&quot;,&quot;b&quot;) 在前面添加 可加一个或多个//poparr.pop() 删除最后一个//shiftarr.shift() 删除前面第一个//splice 删除arr.splice(2) 截取2位从前到后arr.splice(1,2) //第一个参数是开始的位置，第二个参数表示删除位数arr.splice(1,2，“位置1”，“位置2”) //第一个参数是开始的位置，第二个参数表示删除位数 后面的参数代替位置 //排序 ASCALL码排序 var arr[0,-1,5,-4,8] console.log(arr.sort()) arr.sort(function(a,b){ return a-b }) //一定要用sort的话 join str=arr.join(“_”) console.log(arr) 补充方法1234567891011121314151617181920212223var a= 123.666//tostringvar b=a.toString() //b变为了str//tofixed 四舍五入var b=a.toFixed() //b==124//parseint 转换成int,parseFloat转换成float//Numberconsole.log(Number(b)) 转换成数字//isNanN 是的 不是一个整形console.log(isNaN(var)) //faluse//isArrary 方法在Array里面 判断是不是数组console.log(isArray.isArray())","categories":[{"name":"2019年11月","slug":"2019年11月","permalink":"http://yoursite.com/categories/2019%E5%B9%B411%E6%9C%88/"}],"tags":[{"name":"学习","slug":"学习","permalink":"http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"}]},{"title":"JavaScript学习1","slug":"JavaScript1","date":"2019-11-10T10:38:45.000Z","updated":"2019-11-12T11:08:37.587Z","comments":true,"path":"2019/11/10/JavaScript1/","link":"","permalink":"http://yoursite.com/2019/11/10/JavaScript1/","excerpt":"","text":"JavaScript1 基本使用 加了var就是全局变量 alert(“你好”) //刷新页面时出现 console.log() 相当于print 1234567891011var obj=document.getElementsByTagName(\"div\") 获取div对象 返回的是数组 //通过获取标签对象，修改属性var obj=document.getElementsByClassName(\"div\") 获取class对象 返回的是数组 //通过获取class类对象，修改属性var obj=document.getElementById(\"id\") 获取id对象 返回的是数组 //通过获取id类对象，修改属性var obj=document.querySelector(\".class\") //通过css选择器来获取对象：获取第一个var obj=document.querySelectorAll(\"div\") //通过css选择器来获取对象：获取多个 返回的是数组 简单事件 - 点击事件 obj.onclick=function(){console.log(\"单击\")} obj.ondblclick=function(){console.log(\"双击\")} - 鼠标移入移出 obj.onmouseenter=function(){obj.style.color=\"red\"} //进 obj.onmouseleave=function(){obj.style.color=\"yellow\" } //出 - 窗口变化 当窗口变化了产生反应 window.onresize=function(){ } - 下拉框 当下拉框变化了产生反应 var obj=document.querySelector(\"\" ) obj.onchange=function(){ } //首先你要有一个下拉框哦 &lt;!--￼1--&gt; ##数据类型 typeof()看类型 123456789101112131415161718192021222324252627282930313233//字符串var name =\"onionwing\"//数字var age=18console.log(typeof(age))console.log(typeof NaN) //not a number: 不是不是数字//布尔var flag=true//undefinedvar aconsole.log(typeof a) //返回undefined//null 类型：归于objectvar a=null//object类:数组[] 属于一组属性和方法的集合var arr=[1,2,3]var user=&#123;name:\"onionwing\",&#125;//函数不是数据类型","categories":[{"name":"2019年11月","slug":"2019年11月","permalink":"http://yoursite.com/categories/2019%E5%B9%B411%E6%9C%88/"}],"tags":[{"name":"学习","slug":"学习","permalink":"http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"}]}]}